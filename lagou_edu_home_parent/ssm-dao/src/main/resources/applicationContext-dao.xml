<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xsi:schemaLocation="
       http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context.xsd
        http://www.springframework.org/schema/tx
        http://www.springframework.org/schema/tx/spring-tx.xsd
        http://www.springframework.org/schema/aop
        http://www.springframework.org/schema/aop/spring-aop.xsd">

    <!--spring整合mybatis-->
    <!--加载外部的jdbc配置文件-->
    <context:property-placeholder location="classpath:jdbc.properties"/>

    <!--1.准备数据源-->
    <bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource">
        <property name="driverClassName" value="${jdbc.driver}"/>
        <property name="url" value="${jdbc.url}"/>
        <property name="username" value="${jdbc.username}"/>
        <property name="password" value="${jdbc.password}"/>
    </bean>

    <!--2.配置sqlSessionFactoryBean实例对象-->
    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <!--注入数据源-->
        <property name="dataSource" ref="dataSource"/>
        <!--实体类别名的配置-->
        <property name="typeAliasesPackage" value="cn.xuguowen.pojo"/>
        <!--引入分页插件pageHelper-->
        <property name="plugins">
            <array>
                <bean class="com.github.pagehelper.PageHelper">
                    <property name="properties">
                        <!--表示使用mysql下的分页方言：也就是limit-->
                        <value>helperDialect=mysql</value>
                    </property>
                </bean>
            </array>
        </property>
        <!--当我测试根据课程名称和课程状态来查询课程信息时，出现了一个问题：
                查询到的结果没有封装到Course实体的属性上。
            我通过检查发现：是没有引入mybatis的核心配置文件（查询结果没有实现驼峰命名规则的自动映射）
        -->
        <property name="configLocation" value="classpath:sqlMapConfig.xml"/>
    </bean>

    <!--3.配置扫描映射-->
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <!--指定要扫描的包-->
        <property name="basePackage" value="cn.xuguowen.dao"></property>
    </bean>

</beans>
